% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hello.R
\name{build.flamelet}
\alias{build.flamelet}
\title{Persistence Flamelet Function}
\usage{
build.flamelet(X, base.type = "landscape", base.param = 1,
  dimension = 1, tseq, h.grid = NULL, lim = NULL, by = NULL,
  scale = TRUE)
}
\arguments{
\item{X}{a list of persistence diagrams representing the scale-space family at different resolution.
If \code{X} is a n-by-d matrix or a data.frame containing a d-dimensional pointcloud,
this function computes the Flamelet on the corresponding KDE with the bandwidth as scale parameter.}

\item{base.type}{a string specifying whether the Flamelet is built from Persistence Landscapes ("landscape") or Persistence Silhouettes ("silhouettes")}

\item{base.param}{the order k of the Flamelet (if base.type=="landscape") or the power p of the Flamelet (if base.type=="silhouette")}

\item{dimension}{the topological dimension of the flamelet (0 for connected components, 1 for loops, ...)}

\item{tseq}{a vector of values at which the Flamelet function is evaluated for a fixed scale level}

\item{h.grid}{vector of bandwidths for the KDE, representing the scale parameter of the Flamelet}

\item{lim}{2-by-d matrix, where the i-th column contains the range of the grid over which KDE is computed for the i-th variable.}

\item{by}{a scalar (or a vector if different values are selected for each dimension)
specifying spaces between elements on the grid}

\item{scale}{a logical indicating whether or not the Persistence Diagrams have to be scaled to be in the same range (needed only for visualization purposes)}
}
\description{
Computes the Persistence Flamelets from a list of Persistence Diagrams. If X is a matrix or a dataframe the function computes the flamelets of the
 kernel density estimator computed on X.
}
\examples{
library(TDA)
xx = rbind(circleUnif(50, 1), circleUnif(50, 1.5) + 3)
Xlim = c(-1, 5);  Ylim = c(-1, 5);  by = 0.05
lim = cbind(Xlim, Ylim)
foo.flamelet = build.flamelet(X = xx, h.grid = seq(0.01, 1, length.out = 40), base.type = "landscape", dimension = 1,base.param = 1, lim = lim, by = by,
}
